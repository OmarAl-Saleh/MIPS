module Hazard_Unit(D_rs,D_rt,EX_rt,EX_MemRead,ID_EX_FLUSH,IF_ID_write,PC_write);


input [5:0] D_rs, [5:0] D_rt ; // this signals is rs and rt for the instruction in ID stage

input [5:0] EX_rt ; input EX_MemRead;// this signals is rt and Memory read control signal for instruction EX stage

output wire ID_EX_FLUSH ,IF_ID_write , PC_write ;// this signals is to implement the stall 
reg reg_ID_EX_FLUSH ,reg_IF_ID_write , reg_PC_write ;

// first type of hazard is load-use hazard that occure when we find a depandancy between load instruction and its followed instruction

 always@(*)
 begin
	if(EX_MemRead == 1'b1)
		begin
			if(D_rs == EX_rt or D_rt == EX_rt)
				begin
			
				reg_ID_EX_FLUSH = 1; // to select zeroes for the control mux that control the flow of ID/EX register
				reg_IF_ID_write = 0; // to disable the the IF/ID register so he can't load new values and keep his old value
				reg_PC_write = 0; // to disable the the PC so he can't load new values and keep his old value
				
				
				end
	
		end
	
	else 
			begin
			reg_ID_EX_FLUSH = 0; 
				reg_IF_ID_write = 1; 
				reg_PC_write = 1; 
				
	
			end

  end

  // assign output wires
   assign ID_EX_FLUSH = reg_ID_EX_FLUSH;
   assign IF_ID_write = reg_IF_ID_write;
	assign PC_write = reg_PC_write;
	
  
  
  
  endmodule 